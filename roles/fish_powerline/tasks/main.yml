---
- name: 使用可能なシェルの一覧にfishを追加
  lineinfile:
    path: /etc/shells
    line: /usr/local/bin/fish
    backup: yes
  become: true

- name: fishをデフォルトシェルに設定
  become: true
  user:
    name: "{{ ansible_user_id }}"
    shell: /usr/local/bin/fish
  when: ansible_user_shell != "/usr/local/bin/fish"

- name: fish用ディレクトリ作成
  file:
    path: ~/.config/fish/functions/
    state: directory
    recurse: true

- name: ディレクトリ存在確認(dry-run用)
  stat:
    path: ~/.config/fish/functions/
  register: result_fish_dir

# Oh My FishよりFisherの方が後発、かつFisherでOMFのプラグインもインストールできるためこっちを選んだ
# → https://qiita.com/hennin/items/33758226a0de8c963ddf
- name: Fisher (fishのパッケージマネージャ)をインストール
  get_url:
    url: https://git.io/fisher
    dest: ~/.config/fish/functions/fisher.fish
    force: true
  # OpenSSLの問題によりTLS認証エラーが発生してタスクに失敗するのでワークアラウンドとして以下の変数を定義
  # https://github.com/ansible/ansible/issues/33417
  # todo: もっと良い解決方法を見つける
  vars:
    ansible_python_interpreter: python3
  when: result_fish_dir.stat.exists

- name: fishがインストールされてるか確認(dry-run用)
  stat:
    path: /usr/local/bin/fish
  register: result_fish

- name: Fishermanのパッケージインストール状況確認
  shell:  # noqa 305
    cmd: "fisher ls"
    executable: /usr/local/bin/fish
  changed_when: false
  check_mode: false
  register: result
  when: result_fish.stat.exists

- name: Fishermanでパッケージインストール
  shell:  # noqa 305
    cmd: "fisher add {{ item }}"
    executable: /usr/local/bin/fish
  when:
    - result_fish.stat.exists
    - not item in result.stdout_lines
  loop: "{{ fisher_packages }}"

- name: フォントのインストール先ディレクトリ
  file:
    path: ~/Library/Fonts
    mode: 0700
    state: directory

- name: Powerlineフォントが既にインストールされているか確認
  find:
    paths: ~/Library/Fonts
    patterns: '*.ttf'
  register: result

- block:
    - name: PowerlineインストールのためにGitリポジトリをクローン
      git:  # noqa 401
        repo: https://github.com/powerline/fonts.git
        dest: /tmp/powerline_fonts
        depth: 1
    - name: Powerlineフォントをインストール
      command: /tmp/powerline_fonts/install.sh
  when: result.matched == 0

- name: Docker用のコマンド保管ファイルを配置
  get_url:
    url: https://raw.githubusercontent.com/docker/docker-ce/master/components/cli/contrib/completion/fish/docker.fish
    dest: ~/.config/fish/completions/docker.fish
    force: true
  # todo: OpenSSL問題(↑参照)
  vars:
    ansible_python_interpreter: python3
  when: not ansible_check_mode

- name: docker-compose用のコマンド保管ファイルを配置
  get_url:
    url: https://raw.githubusercontent.com/docker/compose/master/contrib/completion/fish/docker-compose.fish
    dest: ~/.config/fish/completions/docker-compose.fish
    force: true
  # todo: OpenSSL問題(↑参照)
  vars:
    ansible_python_interpreter: python3
  when: not ansible_check_mode
