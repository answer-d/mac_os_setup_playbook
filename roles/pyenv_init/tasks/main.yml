---
- name: pyenvが使用可能か確認(使用できなければ全体をスキップ)
  command: which pyenv
  changed_when: false
  failed_when: false
  check_mode: false
  register: result_pyenv_exists

- block:
    - name: 何らかのpythonがインストールされているかチェック(されていたら何もしない)
      command: pyenv versions
      check_mode: false
      changed_when: false
      register: result_pyenv_versions

    - block:
        - name: python3.Xの最新をインストール
          shell: 'pyenv install -l | grep -e "^ *3" | grep -v dev | grep -v rc | tail -1 | xargs -I{} pyenv install {}'

        - name: インストールしたpythonをglobalに設定
          shell: 'pyenv versions | grep -v system | xargs -I{} pyenv global {}'
      # インストール済のバージョンが `system` のみの場合にブロック実行
      when: result_pyenv_versions.stdout_lines|length == 1

    - name: pyenvにパスを通す(fish)
      blockinfile:
        dest: ~/.config/fish/config.fish
        marker: "# {mark} ANSIBLE MANAGED BLOCK pyenv init"
        content: eval (pyenv init - | source)
        create: true

    # https://qiita.com/komo/items/450180282766ffb250ba
    - name: homebrewとpyenvの干渉問題を解決するためのエイリアスを追加
      blockinfile:
        dest: ~/.config/fish/config.fish
        marker: "# {mark} ANSIBLE MANAGED BLOCK brew alias"
        content: |
          function brew
              set -xl PATH $PATH # Protect global PATH by local PATH
              if type -q pyenv; and contains (pyenv root)/shims $PATH
                  set -e PATH[(contains -i (pyenv root)/shims $PATH)]
              end

              command brew $argv
          end
  when: result_pyenv_exists.stdout
